#!/usr/bin/env python

# To test this recipe run:
# echo "PINBOARD_TOKEN=..." > config.env
# eval $(egrep -v '^#' config.env | xargs) ebook-convert pinboard-to-kindle.recipe test.mobi --output-profile kindle_pw3 --verbose

__license__ = "MIT"
__copyright__ = "2020, Christian Hans"
__website__ = "https://github.com/christianhans/pinboard-to-kindle"


import os
import sys
import re
import urllib
import json
import subprocess
import uuid
import glob
from datetime import date


class PinboardRecipe(BasicNewsRecipe):
    title = "Pinboard"
    description = "Generate an ebook of unread Pinboard bookmarks."
    cover_url = "https://picsum.photos/600/800"
    __author__ = "Christian Hans"

    auto_cleanup = False
    no_stylesheets = True
    remove_javascript = True
    articles_are_obfuscated = True
    encoding = "utf8"

    downloaded_file_paths = {}

    def _get_input_folder(self):
        today = date.today().strftime("%Y-%m-%d")

        tmp_data_folder_env = os.environ.get("RAW_DATA_FOLDER")
        tmp_data_folder = tmp_data_folder_env if tmp_data_folder_env else "/tmp/"
        return os.path.join(tmp_data_folder, today)

    def get_obfuscated_article(self, url):
        """ Let Calibre download images and other media in downloaded html files """
        return self.downloaded_file_paths.get(url)

    def parse_index(self):
        articles = {}

        input_folder = self._get_input_folder()

        for filename in glob.glob(input_folder + "/*.json"):
            with open(filename, "r") as f:
                data = json.load(f)
            tag = data["tag"]
            if tag not in articles:
                articles[tag] = []
            articles[tag].append({
                "title": data["title"],
                "url": data["url"],
                "description": data["description"],
                "tag": data["tag"]
            })
            self.downloaded_file_paths[data["url"]] = data["localFile"]

        return [(tag,arts) for tag, arts in articles.items()]
